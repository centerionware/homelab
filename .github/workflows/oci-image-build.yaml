name: Build and Publish Multi-Arch Docker Image

on:
  push:
    branches:
      - '**'

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ciw-gh-homelab-runners
    
    outputs:
      image-uri: ghcr.io/${{ github.repository }}@${{ steps.build-and-push.outputs.digest }}
    timeout-minutes: 2880
    steps:
      # Log in to GHCR for final push
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Log in to Harbor for caching only
      - name: Log in to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.centerionware.com
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASS }}

      - name: Set up Docker Buildx with Kubernetes driver
        uses: docker/setup-buildx-action@v3
        with:
          driver: kubernetes
          driver-opts: |
            namespace=buildkit
          use: true
          buildkitd-config-inline: |
            [registry."docker.io"]
              mirrors = ["https://harbor.centerionware.com/dockerhub"]
            [registry."ghcr.io"]
              mirrors = ["https://harbor.centerionware.com/github"]
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push multi-arch image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          # Use Harbor as a cache backend
          cache-from: type=registry,ref=harbor.centerionware.com/cache/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=harbor.centerionware.com/cache/${{ github.repository }}:buildcache,mode=max,image-manifest=true
